<?phpnamespace Nemundo\Content\Action;use Nemundo\Content\Event\AbstractContentEvent;trait ActionTrait{    /**     * @var AbstractContentAction[]     */    protected $actionList = [];    /**     * @var AbstractContentEvent[]     */   /* public static $eventRegisterList = [];    public function registerEvent(AbstractContentEvent $contentEvent)    {        EventTrait::$eventRegisterList[$this->typeId][] = $contentEvent;        //$this->eveventList[] = $contentEvent;        return $this;    }*/    public function addAction(AbstractContentAction $action)    {        $this->actionList[] = $action;        return $this;    }    public function getActionList()    {        return $this->actionList;    }    protected function runEvent()    {        foreach ($this->actionList as $event) {            $event->onAction($this);            /*            if (!$this->existsItem) {                $event->onCreate($this);            } else {                $event->onUpdate($this);            }*/        }        /*if (isset(EventTrait::$eventRegisterList[$this->typeId])) {            foreach (EventTrait::$eventRegisterList[$this->typeId] as $event) {                $event->onCreate($this);            }        }*/    }}