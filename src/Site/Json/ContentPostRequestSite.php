<?phpnamespace Nemundo\Content\Site\Json;use Nemundo\Content\App\File\Content\File\FileContentType;use Nemundo\Content\App\File\Content\Image\ImageType;use Nemundo\Content\App\Text\WebService\TextWebService;use Nemundo\Content\Builder\ContentTypeBuilder;use Nemundo\Content\Parameter\ContentTypeParameter;use Nemundo\Content\Type\AbstractType;use Nemundo\Content\Type\WebServiceTrait;use Nemundo\Core\Debug\Debug;use Nemundo\Core\Http\Request\File\FileRequest;use Nemundo\Core\Http\Request\Post\PostRequest;use Nemundo\Hosting\Data\Git\Git;use Nemundo\Web\Site\AbstractJsonSite;use Nemundo\Web\Site\AbstractSite;class ContentPostRequestSite extends AbstractSite{    /**     * @var ContentPostRequestSite     */    public static $site;    protected function loadSite()    {       $this->url='content-post-request';       ContentPostRequestSite::$site=$this;    }    public function loadContent()    {        (new Debug())->write($_POST);       /* (new Debug())->write($_GET);        (new Debug())->write($_POST);        (new Debug())->write($_FILES);*/        $contentTypeId = (new PostRequest('content_type'))->getValue();        /** @var AbstractType|WebServiceTrait $contentType */        $contentType = (new ContentTypeBuilder())->getContentType($contentTypeId);        if ($contentType->isObjectOfTrait(WebServiceTrait::class)) {            $contentType->callWebService();        } else {            (new Debug())->write('No WebService');        }     /*   $type = new ImageContentType();  // new FileContentType();        $type->file->fromFileRequest((new FileRequest('file')));        $type->saveType();*///        (new TextWebService())->onCall();        // TODO: Implement loadContent() method.    }}