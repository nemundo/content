<?phpnamespace Nemundo\Content\Site\Json;use Nemundo\Content\Data\Content\ContentReader;use Nemundo\Content\Parameter\LimitParameter;use Nemundo\Db\Sql\Order\SortOrder;use Nemundo\Web\Site\AbstractJsonSite;class ContentListJsonSite extends AbstractJsonSite{    /**     * @var ContentListJsonSite     */    public static $site;    protected function loadSite()    {        $this->url = 'content-list-json';        ContentListJsonSite::$site = $this;    }    protected function loadJson()    {        $reader = new ContentReader();        $reader->model->loadContentType();        //$reader->filter->andEqual($reader->model->contentTypeId,'d7ce44a9-7a62-4c88-9e48-7859df3de1b2');        $reader->addOrder($reader->model->id, SortOrder::DESCENDING);        $reader->limit = (new LimitParameter())->getValue();        foreach ($reader->getData() as $contentRow) {            $data = [];            $data['subject'] = $contentRow->subject;            $data['data_id'] = $contentRow->dataId;            $data['content_id'] = $contentRow->id;            $data['content_type_id'] = $contentRow->contentTypeId;            $data['content_type'] = $contentRow->contentType->contentType;            $content = $contentRow->getContent();            //$content->fro            /*   if ($content->isObjectOfTrait(JsonContentTrait::class)) {               $data=$content->getJsonData();               }*/            // $this->addJsonRow($content->getJsonData());            $this->addJsonRow($data);        }    }}