<?phpnamespace Nemundo\Content\Form;use Nemundo\Admin\Com\Image\AdminImage;use Nemundo\Com\Html\Listing\UnorderedList;use Nemundo\Content\App\File\Content\Image\ImageItem;use Nemundo\Content\App\File\Data\Image\ImageReader;use Nemundo\Content\App\File\Data\ImageIndex\ImageIndexReader;use Nemundo\Content\Builder\ContentBuilder;use Nemundo\Content\Data\Content\ContentReader;use Nemundo\Content\Form\AbstractContentForm;use Nemundo\Content\Index\Tree\Com\Form\AbstractContentSearchForm;use Nemundo\Core\Http\Request\Post\PostRequest;use Nemundo\Html\Form\Button\SubmitButton;use Nemundo\Package\Bootstrap\Image\BootstrapResponsiveImage;class ContentSearchForm extends AbstractContentForm  // AbstractContentSearchForm{    protected $requestName = 'image_id';    public $formName = 'Image Search';    public function getContent()    {        $ul = new UnorderedList($this);        $reader = new ContentReader();  // new ImageReader();  // new ImageIndexReader();        $reader->filter->andEqual($reader->model->contentTypeId,$this->contentType->typeId);        foreach ($reader->getData() as $contentRow) {            $btn = new SubmitButton($ul);            $btn->name = $this->requestName;            $btn->label = $contentRow->subject;            $btn->value = $contentRow->id;  // (new ImageItem($imageRow->id))->getContentId();  // $indexRow->contentId;            /*$img = new AdminImage($btn);            $img->src = $imageRow->image->getImageUrl($reader->model->imageAutoSize400);*/        }        $this->submitButton->visible = false;        return parent::getContent();    }    protected function onSave()    {        // TODO: Implement onSave() method.        $value = (new PostRequest($this->requestName))->getValue();        //$contentType = (new ContentBuilder())->getContent($value);        //$this->saveTree($contentType);        $item = new ImageItem($value);        foreach ($this->getActionList() as $action) {            $action->onAction($item);        }    }    /*protected function onSubmit()    {        $value = (new PostRequest($this->requestName))->getValue();        $contentType = (new ContentBuilder())->getContent($value);        $this->saveTree($contentType);    }*/}