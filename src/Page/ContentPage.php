<?phpnamespace Nemundo\Content\Page;use Nemundo\Admin\Com\Breadcrumb\AdminBreadcrumb;use Nemundo\Admin\Com\Button\AdminSiteButton;use Nemundo\Admin\Com\Form\AdminSearchForm;use Nemundo\Admin\Com\Layout\AdminFlexboxLayout;use Nemundo\Admin\Com\Layout\Grid\AdminTwoColumnGridLayout;use Nemundo\Admin\Com\Pagination\AdminPagination;use Nemundo\Admin\Com\Table\AdminTable;use Nemundo\Admin\Com\Table\Row\AdminTableRow;use Nemundo\Admin\Parameter\PageParameter;use Nemundo\Com\TableBuilder\TableHeader;use Nemundo\Com\Template\AbstractTemplateDocument;use Nemundo\Content\Com\Card\ContentCard;use Nemundo\Content\Com\Dropdown\ContentTypeDropdown;use Nemundo\Content\Com\ListBox\ContentTypeListBox;use Nemundo\Content\Data\Content\ContentPaginationReader;use Nemundo\Content\Parameter\ContentParameter;use Nemundo\Content\Parameter\ContentTypeParameter;use Nemundo\Content\Reader\ContentTypeDataReader;use Nemundo\Content\Site\ContentDeleteSite;use Nemundo\Content\Site\ContentEditSite;use Nemundo\Content\Site\ContentNewSite;use Nemundo\Content\Site\ContentSite;use Nemundo\Content\Site\ContentViewSite;use Nemundo\Content\Site\SearchContentAdminSite;use Nemundo\Html\Block\Div;use Nemundo\Html\Paragraph\Paragraph;class ContentPage extends AbstractTemplateDocument{    public function getContent()    {        $container = new AdminTwoColumnGridLayout($this);        $left = new AdminFlexboxLayout($container);        $right = new Div($container);        $breadcrumb = new AdminBreadcrumb($left);        $breadcrumb->addSite(ContentSite::$site);        $site = clone(ContentNewSite::$site);        $dropdown = new ContentTypeDropdown($left);        $dropdown->redirectSite = $site;        $contentTypeReader = new ContentTypeDataReader();        foreach ($contentTypeReader->getData() as $contentTypeRow) {            $dropdown->addContentType($contentTypeRow->getContentType());        }        $form = new AdminSearchForm($left);        $listbox = new ContentTypeListBox($form);        $listbox->searchMode = true;        $listbox->submitOnChange = true;        $contentReader = new ContentPaginationReader();        $contentReader->model->loadContentType();        $contentReader->paginationLimit = 20;        $contentReader->currentPage = (new PageParameter())->getValue();        if ($listbox->hasValue()) {            $contentTypeId = $listbox->getValue();            $contentReader->filter->andEqual($contentReader->model->contentTypeId, $contentTypeId);            $contentType = $listbox->getContentType();            if ($contentType->hasForm()) {                $btn = new AdminSiteButton($left);                $btn->site = clone(ContentNewSite::$site);                $btn->site->addParameter(new ContentTypeParameter($listbox->getValue()));            }            if ($contentType->hasAdmin()) {                $btn = new AdminSiteButton($left);                $btn->site = clone(SearchContentAdminSite::$site);                $btn->site->addParameter(new ContentTypeParameter($listbox->getValue()));            }            if ($contentType->hasList()) {                $contentType->getListing($this);            }        }        $p = new Paragraph($left);        $p->content = $contentReader->getFormatTotalCount() . ' items found';        $table = new AdminTable($left);        $header = new TableHeader($table);        $header->addText($contentReader->model->subject->label);        $header->addText($contentReader->model->contentType->label);        $header->addEmpty(3);        foreach ($contentReader->getData() as $contentRow) {            $tableRow = new AdminTableRow($table);            $site = clone(ContentViewSite::$site);            $site->title = $contentRow->subject;            $site->addParameter(new ContentParameter($contentRow->id));            $tableRow->addSite($site);            $tableRow->addText($contentRow->contentType->contentType);            $tableRow->addIconSite($site);            $site = clone(ContentEditSite::$site);            $site->addParameter(new ContentParameter($contentRow->id));            $tableRow->addIconSite($site);            $site = clone(ContentDeleteSite::$site);            $site->addParameter(new ContentParameter($contentRow->id));            $tableRow->addIconSite($site);        }        $pagination = new AdminPagination($left);        $pagination->paginationReader = $contentReader;        $contentParameter = new ContentParameter();        if ($contentParameter->hasValue()) {            $card = new ContentCard($right);            $card->contentId = $contentParameter->getValue();        }        return parent::getContent();    }}