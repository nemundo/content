<?phpnamespace Nemundo\Content\Index\Log\Page;use Nemundo\Admin\Com\Layout\AdminFlexboxLayout;use Nemundo\Admin\Com\Pagination\AdminPagination;use Nemundo\Admin\Com\Table\AdminTable;use Nemundo\Admin\Com\Table\AdminTableHeader;use Nemundo\Admin\Com\Table\Row\AdminTableRow;use Nemundo\Com\Template\AbstractTemplateDocument;use Nemundo\Content\Index\Log\Data\Log\LogPaginationReader;use Nemundo\Db\Sql\Order\SortOrder;class LogPage extends AbstractTemplateDocument{    public function getContent()    {        $layout = new AdminFlexboxLayout($this);        $table = new AdminTable($layout);        $logReader = new LogPaginationReader();        $logReader->model->loadContent();        $logReader->model->content->loadContentType();        $logReader->model->loadUser();        $logReader->addOrder($logReader->model->id,SortOrder::DESCENDING);        $header=new AdminTableHeader($table);        $header->addText($logReader->model->content->contentType->label);        $header->addText($logReader->model->content->label);        $header->addText($logReader->model->user->label);        $header->addText($logReader->model->dateTime->label);        foreach ($logReader->getData() as $logRow) {            $tableRow = new AdminTableRow($table);            $tableRow->addText($logRow->content->contentType->contentType);            $tableRow->addText($logRow->content->subject);            $tableRow->addText($logRow->user->displayName);            $tableRow->addText($logRow->dateTime->getShortDateTimeLeadingZeroFormat());        }        $pagination= new AdminPagination($layout);        $pagination->paginationReader=$logReader;        return parent::getContent();    }}