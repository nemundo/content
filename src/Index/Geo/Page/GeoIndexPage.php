<?phpnamespace Nemundo\Content\Index\Geo\Page;use Nemundo\Admin\Com\Button\AdminIconSiteButton;use Nemundo\Admin\Com\Form\AdminSearchForm;use Nemundo\Admin\Com\Layout\AdminFlexboxLayout;use Nemundo\Admin\Com\Layout\Flex\AdminRowFlexLayout;use Nemundo\Admin\Com\Layout\Grid\AdminTwoColumnGridLayout;use Nemundo\Admin\Com\ListBox\AdminSearchTextBox;use Nemundo\Admin\Com\Pagination\AdminPagination;use Nemundo\Admin\Com\Table\AdminTable;use Nemundo\Admin\Com\Table\Row\AdminTableRow;use Nemundo\Admin\Parameter\PageParameter;use Nemundo\Com\TableBuilder\TableHeader;use Nemundo\Com\Template\AbstractTemplateDocument;use Nemundo\Content\Com\Card\ContentCard;use Nemundo\Content\Index\Geo\Com\ListBox\GeoContentTypeListBox;use Nemundo\Content\Index\Geo\Com\Tab\GeoTab;use Nemundo\Content\Index\Geo\Data\GeoIndex\GeoIndexPaginationReader;use Nemundo\Content\Index\Geo\Parameter\GeoIndexParameter;use Nemundo\Content\Index\Geo\Reader\GeoDistanceReader;use Nemundo\Content\Index\Geo\Reader\GeoIndex\GeoIndexDataPaginationReader;use Nemundo\Content\Index\Geo\Site\GeoIndexSite;use Nemundo\Content\Index\Geo\Site\Kml\GeoIndexKmlSite;use Nemundo\Content\Parameter\ContentParameter;use Nemundo\Content\Parameter\ContentTypeParameter;use Nemundo\Html\Block\Div;use Nemundo\Html\Paragraph\Paragraph;class GeoIndexPage extends AbstractTemplateDocument{    public function getContent()    {        $layout = new AdminFlexboxLayout($this);        new GeoTab($layout);        $form = new AdminSearchForm($layout);        $subject = new AdminSearchTextBox($form);        $subject->label = 'Search';        $subject->searchMode=true;        $listbox = new GeoContentTypeListBox($form);        $listbox->submitOnChange = true;        $listbox->searchMode = true;        $layoutRow = new AdminRowFlexLayout($layout);        $btn = new AdminIconSiteButton($layoutRow);        $btn->site = clone(GeoIndexKmlSite::$site);        $btn->site->addParameter(new ContentTypeParameter());        $p = new Paragraph($layout);        $layout = new AdminTwoColumnGridLayout($this);        $left = new AdminFlexboxLayout($layout);        $right = new Div($layout);        $table = new AdminTable($left);        $header = new TableHeader($table);        $header->addText('Place');        $header->addText('Content Type');        $header->addText('Coordinate');        $geoReader = new GeoIndexDataPaginationReader();  // new GeoIndexPaginationReader();        $geoReader->loadModel();        /*$geoReader->model->loadContent();        $geoReader->model->content->loadContentType();*/        if ($subject->hasValue()) {            $geoReader->subject = $subject->getValue();        }        $contentTypeParameter = new ContentTypeParameter();        $contentTypeParameter->contentTypeCheck = false;        if ($contentTypeParameter->hasValue()) {            $geoReader->contentTypeId = $contentTypeParameter->getValue();        }        $p->content = $geoReader->getFormatTotalCount() . ' item found';        $geoReader->currentPage = (new PageParameter())->getValue();        $geoReader->addOrder($geoReader->model->place);        foreach ($geoReader->getData() as $geoRow) {            $row = new AdminTableRow($table);            $site = clone(GeoIndexSite::$site);            $site->title = $geoRow->place;            $site->addParameter(new ContentParameter($geoRow->contentId));            $site->addParameter(new ContentTypeParameter());            $site->addParameter(new PageParameter());            $site->addParameter(new GeoIndexParameter($geoRow->id));            $row->addSite($site);            $row->addText($geoRow->content->contentType->contentType);            $row->addText($geoRow->coordinate->getText());            //$row->addText($geoRow->coordinate->getText());            /*            if ($contentType->hasKmlMarker()) {                $site = clone(GeoContentKmlSite::$site);                $site->addParameter(new GeoIndexParameter($geoRow->id));                $row->addIconSite($site);            } else {                $row->addEmpty();            }*/            /*$site = clone(ContentDeleteSite::$site);            $site->addParameter(new ContentParameter($contentType->getContentId()));            $row->addIconSite($site);*/            //$row->addClickableSite($site);            //} /*else {            /*     (new LogMessage())->writeError('No Content Type');             }*/        }        $pagination = new AdminPagination($left);        $pagination->paginationReader = $geoReader;        /*        $parameter = new ContentTypeParameter();        if ($parameter->hasValue()) {            $contentType = $parameter->getContentType();            if ($contentType->hasForm()) {                $container = new ContentTypeFormContainer($layout->col2);                $container->contentType = $contentType;                $container->redirectSite = clone(GeoIndexSite::$site);                $container->redirectSite->addParameter(new ApplicationParameter());                $container->redirectSite->addParameter(new ContentTypeParameter());            }        }*/        $contentParameter = new ContentParameter();        if ($contentParameter->hasValue()) {            //$content = $contentParameter->getContent(false);            //$content->getDefaultView($right);            $card = new ContentCard($right);            $card->contentId = $contentParameter->getValue();            $table = new AdminTable($right);            $header = new TableHeader($table);            $header->addText('Content');            //$header->addText('Type');            $header->addText('Distance');            $reader = new GeoDistanceReader();            $reader->contentId = $contentParameter->getValue();  //  $this->contentId;            $reader->limit = 10;            foreach ($reader->getData() as $geoDistanceItem) {                $row = new AdminTableRow($table);                //$row->addText($geoDistanceItem->subject);                $site = clone(GeoIndexSite::$site);                $site->addParameter(new ContentParameter($geoDistanceItem->contentId));                $site->title = $geoDistanceItem->subject;                $row->addSite($site);                $row->addText($geoDistanceItem->getDistanceText());                //$row->addText((new Number($distanceRow->distance / 1000))->roundNumber(0) . ' km');                /*if ($this->redirectSite !==null) {                    $site = clone($this->redirectSite);                    $site->addParameter(new ContentParameter($geoDistanceItem->contentId));                    $row->addClickableSite($site);                }*/            }            /*$card = new ContentCard($layout->col2);            $card->content=$content;            /*            $widget = new ContentWidget($layout->col2);            $widget->redirectSite = GeoIndexSite::$site;            $widget->contentType = $content;            //$widget->loadAction=true;            $widget->addContentAction(new EditAction());            $widget->addContentAction(new ViewAction());            $action = new KmlAction();            $widget->addContentAction($action);*/            // geo kml            // empty            /*$container = new GeoIndexContainer($layout->col2);            $container->contentType = $content;            $container->redirectSite = GeoIndexSite::$site;*/        }        return parent::getContent();    }}