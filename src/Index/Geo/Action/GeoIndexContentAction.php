<?phpnamespace Nemundo\Content\Index\Geo\Action;use Nemundo\Content\Action\AbstractContentAction;use Nemundo\Content\Index\Geo\Data\GeoIndex\GeoIndex;use Nemundo\Content\Index\Geo\Data\GeoIndex\GeoIndexDelete;use Nemundo\Content\Index\Geo\Type\GeoIndexTrait;use Nemundo\Content\Type\AbstractContentItem;use Nemundo\Content\Type\AbstractContentType;class GeoIndexContentAction extends AbstractContentAction{    /**     * @var GeoIndexTrait|AbstractContentType     */    protected $content;    protected function loadAction()    {        $this->actionLabel = 'Geo Index';        $this->actionId = '86220f81-639a-4b2d-8a0a-a22283ff0ca6';        $this->viewClass = GeoIndexView::class;        $this->actionBuilder = true;    }    /**     * @param AbstractContentItem|GeoIndexTrait $item     * @return $this|void     */    public function onAction(AbstractContentItem $item)    {        if ($item->isObjectOfTrait(GeoIndexTrait::class)) {            if ($item->hasGeoCoordinate()) {            $data = new GeoIndex();            $data->updateOnDuplicate = true;            $data->place = $item->getSubject();            $data->coordinate = $item->getGeoCoordinate();            $data->contentId = $item->getContentId();            $data->description = $item->getText();            $data->imageUrl = $item->getImageUrl();            $data->save();            }        }        return $this;    }    public function deleteAction(AbstractContentItem $item)    {        $delete = new GeoIndexDelete();        $delete->filter->andEqual($delete->model->contentId, $item->getContentId());        $delete->delete();    }}