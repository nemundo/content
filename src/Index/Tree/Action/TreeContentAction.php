<?phpnamespace Nemundo\Content\Index\Tree\Action;use Nemundo\Content\Action\AbstractContentAction;use Nemundo\Content\Index\Tree\Data\Tree\Tree;use Nemundo\Content\Index\Tree\Data\Tree\TreeValue;use Nemundo\Content\Type\AbstractContentItem;// TreeActionclass TreeContentAction extends AbstractContentAction{    public $parentId;    protected function loadAction()    {        $this->actionLabel = 'Tree';        $this->actionId = '6ced4955-171a-494c-988b-37cff9bcf1e7';        $this->viewClass = TreeActionView::class;    }    public function onAction(AbstractContentItem $item)    {        if ($this->parentId !== null) {            $value = new TreeValue();            $value->field = $value->model->itemOrder;            $value->filter->andEqual($value->model->parentId, $this->parentId);            $itemOrder = $value->getMaxValue();            if ($itemOrder == '') {                $itemOrder = -1;            }            $itemOrder++;            $data = new Tree();            //$data->ignoreIfExists = true;            $data->parentId = $this->parentId;            $data->childId = $item->getContentId();            $data->itemOrder = $itemOrder;            $data->viewId = 0;  // $item->getDefaultViewId();            $data->save();        }    }}