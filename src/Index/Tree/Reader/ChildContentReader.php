<?phpnamespace Nemundo\Content\Index\Tree\Reader;use Nemundo\Content\Data\Content\ContentRow;use Nemundo\Content\Index\Tree\Data\Tree\TreeReader;use Nemundo\Core\Base\DataSource\AbstractDataSource;class ChildContentReader extends AbstractParentChildContentReader  // AbstractDataSource  // AbstractParentChildContentReader{    //public $contentId;    protected function loadData()    {        parent::loadData(); // TODO: Change the autogenerated stub        $reader = new TreeReader();        $reader->model->loadChild();        $reader->model->child->loadContentType();        $reader->model->loadView();        $reader->filter->andEqual($reader->model->parentId, $this->contentId);        $reader->addOrder($reader->model->itemOrder);        //$reader->limit = $this->limit;        foreach ($reader->getData() as $treeRow) {            //$this->addItem($treeRow->child);            $this->addItem($treeRow);        }    }    /*  protected function loadData()      {          $reader = new TreeReader();          $reader->model->loadChild();          $reader->model->child->loadContentType();          $reader->model->loadView();          $reader->filter->andEqual($reader->model->parentId, $this->contentId);          $reader->addOrder($reader->model->itemOrder);          //$reader->limit = $this->limit;          foreach ($reader->getData() as $treeRow) {              $this->addItem($treeRow->child);          }      }*/    /**     * @return ContentRow[]     */   /* public function getData()    {        return parent::getData(); // TODO: Change the autogenerated stub    }*/}