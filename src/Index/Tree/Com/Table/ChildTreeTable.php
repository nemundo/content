<?phpnamespace Nemundo\Content\Index\Tree\Com\Table;use Nemundo\Admin\Com\Table\AdminClickableTable;use Nemundo\Admin\Com\Table\AdminTable;use Nemundo\Admin\Com\Table\AdminTableHeader;use Nemundo\Admin\Com\Table\Row\AdminTableRow;use Nemundo\Content\Com\Container\AbstractContentTypeContainer;use Nemundo\Content\Index\Tree\Parameter\TreeParameter;use Nemundo\Content\Index\Tree\Reader\ChildContentReader;use Nemundo\Content\Index\Tree\Reader\ChildContentTypeReader;use Nemundo\Content\Index\Tree\Reader\ChildTreeDataReader;use Nemundo\Content\Index\Tree\Site\ChildDeleteSite;use Nemundo\Content\Index\Tree\Site\ViewEditSite;use Nemundo\Content\Parameter\ContentParameter;use Nemundo\Content\Site\ContentEditSite;use Nemundo\Content\Site\ContentViewSite;use Nemundo\Package\Bootstrap\Table\BootstrapClickableTableRow;class ChildTreeTable extends AdminTable  // AbstractContentTypeContainer{    public $contentId;    public function getContent()    {        //$table = new AdminTable($this);  // new AdminClickableTable($this);        new TreeTableHeader($this);        /*$header = new AdminTableHeader($table);        $header->addText('Child');        $header->addText('Typ');        $header->addText('View');        $header->addText('Item Order');        $header->addEmpty();        $header->addEmpty();*/        $reader = new ChildTreeDataReader();  // new ChildContentReader();        $reader->contentId = $this->contentId;        //$reader->contentType = $this->contentType;        foreach ($reader->getData() as $treeRow) {            $site = clone(ContentViewSite::$site);            $site->addParameter(new ContentParameter($treeRow->childId));            $row = new AdminTableRow($this);            $row->addClickableText($treeRow->child->subject,$site);            $row->addText($treeRow->child->contentType->contentType);            $row->addText($treeRow->itemOrder);            //$row->addText($treeRow->view->viewName);            /*$site = clone(ViewEditSite::$site);            $site->title = $treeRow->view->viewName;            $site->addParameter(new TreeParameter($treeRow->id));            $site->addParameter(new ContentParameter());            $row->addSite($site);*/            /*$site = clone(ContentViewSite::$site);            $site->addParameter(new ContentParameter($treeRow->childId));            $row->addIconSite($site);*/            /*$site = clone(ContentEditSite::$site);            $site->addParameter(new ContentParameter($treeRow->id));            $row->addIconSite($site);*/            $site = clone(ChildDeleteSite::$site);            $site->addParameter(new TreeParameter($treeRow->id));            $row->addIconSite($site);            /*            if ($this->redirectSite !== null) {                $site = clone($this->redirectSite);                $site->addParameter(new ContentParameter($treeRow->childId));                $row->addClickableSite($site);            }*/        }        return parent::getContent();    }}