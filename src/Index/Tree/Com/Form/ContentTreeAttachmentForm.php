<?phpnamespace Nemundo\Content\Index\Tree\Com\Form;use Nemundo\Admin\Com\Form\AbstractAdminForm;use Nemundo\Admin\Com\ListBox\AdminListBox;use Nemundo\Admin\Com\Title\AdminSubtitle;use Nemundo\Com\Container\LibraryTrait;use Nemundo\Content\Com\ListBox\ContentTypeListBox;use Nemundo\Content\Index\Tree\Index\TreeIndexBuilder;use Nemundo\Content\Package\ContentJsPackage;use Nemundo\Content\Reader\ContentDataReader;use Nemundo\Package\Bootstrap\Form\BootstrapForm;use Nemundo\Package\Bootstrap\Layout\Grid\BootstrapRow;use Nemundo\Package\Bootstrap\FormElement\BootstrapListBox;use Nemundo\Content\Data\Content\ContentReader;use Nemundo\Content\Form\AbstractContentForm;use Nemundo\Content\Type\AbstractContentType;use Nemundo\Package\NemundoJs\NemundoJsPackage;use Nemundo\Web\WebConfig;// Two Way possible// AttachToclass ContentTreeAttachmentForm extends AbstractAdminForm  // BootstrapForm{    use LibraryTrait;    /**     * @var AbstractContentType     */    //public $content;    public $contentId;    /**     * @var BootstrapListBox     */    private $contentListBox;    public function getContent()    {        // search box        //$this->addPackage(new NemundoJsPackage());        //$this->addPackage(new ContentJsPackage());        //$this->addJsUrl(WebConfig::$webUrl.'js/content.js');        $subtitle=new AdminSubtitle($this);        $subtitle->content='Attach';        $row=new BootstrapRow($this);        /*$contentTypeListBox = new ContentTypeListBox($row);        $contentTypeListBox->name='content-type-attachment';*/        $this->contentListBox= new AdminListBox($row);        $this->contentListBox->name = 'content-attachment';        $this->contentListBox->label = 'Content';        $this->contentListBox->validation=true;        $contentReader=new ContentDataReader();        //$contentReader->model->loadContentType();        //$contentReader->addOrder($contentReader->model->subject);        foreach ($contentReader->getData() as $contentRow) {            //$this->contentListBox->addItem($contentRow->id,$contentRow->getSubjectContentType());            $this->contentListBox->addItem($contentRow->id,$contentRow->subject);        }        return parent::getContent();    }    protected function onSubmit()    {        $builder = new TreeIndexBuilder($this->contentListBox->getValue());    //$this->contentId);        $builder->parentId =$this->contentId;  // $this->contentListBox->getValue();        $builder->buildIndex();    }}