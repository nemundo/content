<?phpnamespace Nemundo\Content\Index\Search\Service;use Nemundo\App\WebService\Service\AbstractServiceRequest;use Nemundo\Content\Index\Search\Reader\SearchItemReader;use Nemundo\Content\Parameter\ContentTypeParameter;use Nemundo\Core\Debug\Debug;use Nemundo\Core\Http\Request\HttpRequest;use Nemundo\Db\DbConfig;// ContentIndexSearchService// SearchIndexSearchclass ContentSearchService extends AbstractServiceRequest{    protected function loadService()    {        // content-index-search        $this->serviceName = 'searchindex-search';    }    public function onRequest()    {        //(new Debug())->write('search index');        //DbConfig::$sqlDebug=true;        $searchReader = new SearchItemReader();        //$searchReader->query = (new HttpRequest('q'))->getValue();        $searchReader->paginationLimit = 30;        $request = new HttpRequest('q');        if ($request->hasValue()) {            $searchReader->query=$request->getValue();        }        $request = new HttpRequest('content_type');        if ($request->hasValue()) {            //$searchReader->addFilterContentTypeId($request->getValue());            $searchReader->contentTypeId=$request->getValue();        }        /*$contentTypeParameter = new ContentTypeParameter();        $contentTypeParameter->contentTypeCheck = false;        if ($contentTypeParameter->hasValue()) {            $searchReader->addFilterContentType($contentTypeParameter->getContentType());        }*/        foreach ($searchReader->getData() as $searchItem) {            $data['id'] = $searchItem->contentId;            $data['content_id'] = $searchItem->contentId;            $data['content_type_id'] = $searchItem->contentTypeId;            $data['content_type'] = $searchItem->contentTypeLabel;            $data['subject'] = $searchItem->subject;            $data['text'] = $searchItem->text;            $this->addRow($data);        }    }}