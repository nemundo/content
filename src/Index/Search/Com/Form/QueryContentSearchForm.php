<?phpnamespace Nemundo\Content\Index\Search\Com\Form;use Nemundo\Admin\Com\Form\AdminSearchForm;use Nemundo\Admin\Com\ListBox\AdminSearchTextBox;use Nemundo\Com\JavaScript\Module\ModuleJavaScript;use Nemundo\Content\Index\Search\Parameter\SearchQueryParameter;class QueryContentSearchForm extends AdminSearchForm{    /**     * @var AdminSearchTextBox     */    private $query;    public function getContent()    {        $this->id = 'query-content-search-form';        $module = new ModuleJavaScript($this);        $module->src = '/package/js/content/Index/Search/Com/Autocomplete/search_autocomplete.js';        //$module->src = '/package/js/framework/Admin/Autocomplete/autocomplete.js';        //(new Debug())->write(WordJsonSite::$site->getUrl());        //WordJsonSite::$site        //    new BootstrapAutocompleteMultipleValueTextBox($formRow);        /* $this->query = new AdminAutocompleteSearchTextBox($this);  // new BootstrapAutocompleteMultipleValueTextBox($formRow);         $this->query->name = (new SearchQueryParameter())->parameterName;         //$this->query->seperator = ' ';         $this->query->searchMode = true;         /*$this->query->column = true;         $this->query->columnSize = 4;*/        /*    $this->query->placeholder[LanguageCode::EN] = 'Search';            $this->query->placeholder[LanguageCode::DE] = 'Suche';            $this->query->label = HtmlCharacter::NON_BREAKING_SPACE;*/        //$this->query-> sourceSite = WordJsonSite::$site;        /*        $listbox = new ContentTypeListBox($formRow);        $listbox->submitOnChange = true;        $listbox->searchMode = true;*/        /*   $button = new AdminSubmitButton($this);  // new AdminSearchButton($formRow);           $button->label='Search';*/        //$button->column = true;        return parent::getContent();    }    public function hasValue()    {        return (new SearchQueryParameter())->hasValue();    }    public function getSearchQuery()    {        $value = (new SearchQueryParameter())->getValue();        return $value;    }    public function getWordId()    {        $wordId = (new SearchQueryParameter())->getWordId();  // md5(mb_strtolower( $this->getSearchQuery()));        return $wordId;    }}