<?phpnamespace Nemundo\Content\Index\Search\Com\Container;use Nemundo\Admin\Com\Layout\AdminFlexboxLayout;use Nemundo\Admin\Com\Layout\Flex\AdminRowFlexLayout;use Nemundo\Admin\Com\ListGroup\AdminListGroup;use Nemundo\Admin\Com\Pagination\AdminPagination;use Nemundo\Com\Html\Hyperlink\SiteHyperlink;use Nemundo\Content\Com\Card\ContentCard;use Nemundo\Content\Index\Search\Com\Form\QueryContentSearchForm;use Nemundo\Content\Index\Search\Parameter\SearchQueryParameter;use Nemundo\Content\Index\Search\Reader\SearchItemReader;use Nemundo\Content\Parameter\ContentParameter;use Nemundo\Content\Parameter\ContentTypeParameter;use Nemundo\Core\Language\LanguageCode;use Nemundo\Core\Language\Translation;use Nemundo\Html\Block\Div;use Nemundo\Html\Block\Hr;use Nemundo\Html\Container\AbstractHtmlContainer;use Nemundo\Html\Formatting\Small;use Nemundo\Html\Heading\H3;use Nemundo\Html\Paragraph\Paragraph;use Nemundo\Package\Bootstrap\Listing\BootstrapSiteListGroup;use Nemundo\Web\Site\AbstractSite;use Nemundo\Web\Site\Site;class SearchIndexContainer extends AbstractHtmlContainer{    /**     * @var AbstractSite     */    //public $redirectSite;    public function getContent()    {        new QueryContentSearchForm($this);        $queryParameter = new SearchQueryParameter();        if ($queryParameter->hasValue()) {            $layout = new AdminRowFlexLayout($this);  // new AdminFlexboxLayout($this);  // new BootstrapTwoColumnLayout($this);            /*$layout->col1->columnWidth = 8;            $layout->col2->columnWidth = 4;*/            $left = new Div($layout);            $right=new Div($layout);            $p = new Paragraph($left);            //$table = new AdminClickableTable($layout->col1);            /*$header = new AdminTableHeader($table);            $header->addText('Subject');            $header->addText('Text');            $header->addText('Type');*/            $searchReader = new SearchItemReader();            $searchReader->query = $queryParameter->getValue();            $searchReader->paginationLimit = 30;            $contentTypeParameter = new ContentTypeParameter();            $contentTypeParameter->contentTypeCheck = false;            if ($contentTypeParameter->hasValue()) {                $searchReader->addFilterContentType($contentTypeParameter->getContentType());            }            $resultText = [];            $resultText[LanguageCode::EN] = 'Results found';            $resultText[LanguageCode::DE] = 'Ergebnisse gefunden';            $searchCount = $searchReader->getTotalCount();  // ->getFormatCount();            $p->content = $searchCount . ' ' . (new Translation())->getText($resultText);            foreach ($searchReader->getData() as $searchItem) {                //$row = new BootstrapClickableTableRow($table);                $div = new Div($left);                $smallDiv = new Div($div);                $small = new Small($smallDiv);                $small->content = $searchItem->contentTypeLabel;                $hyperlink = new SiteHyperlink($div);                //$hyperlink->addCssClass('stretched-link');                //$hyperlink->content=$searchItem->subject;                $h3 = new H3($hyperlink);                $h3->content = $searchItem->subject;                $site = null;                $contentType = $searchItem->getContentTypeLabel();                /*if ($contentType->hasViewSite()) {                    $site = $contentType->getViewSite();                } else {                    $site = clone($this->redirectSite);                    $site->addParameter(new ContentParameter($searchItem->contentId));                }*/                //$site = clone($this->redirectSite);                $site = new Site();                $site->addParameter(new ContentParameter($searchItem->contentId));                $hyperlink->site = $site;                $p = new Paragraph($div);                $p->content = $searchItem->text;                new Hr($div);                /*                $row->addText($searchItem->subject);                $row->addText($searchItem->text);                $row->addText($searchItem->contentTypeLabel);*/                //$row->addClickableSite($site);            }            $pagination = new AdminPagination($left);            $pagination->paginationReader = $searchReader;            $list = new AdminListGroup($right);  // new BootstrapSiteListGroup($layout);            foreach ($searchReader->getContentTypeList() as $contentTypeResultItem) {                $site = new Site();                $site->title = $contentTypeResultItem->contentTypeLabel.' ('.$contentTypeResultItem->resultCount.')';                $site->addParameter(new ContentTypeParameter($contentTypeResultItem->contentTypeId));                $list->addSite($site);                //$list->addSite($site, $contentTypeResultItem->resultCount);            }        }        $parameter = new ContentParameter();        if ($parameter->hasValue()) {        $card=new ContentCard($layout);        $card->contentId= $parameter->getValue();  //  $contentId;        }        return parent::getContent();    }}